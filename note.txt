main features:
    users profiles
    follow/unfollow feature
    communities
    posts
    tags
    rich text editor for posts
    voting system
    caching
    search system
    internationalization (i18n)
    localization (l10n)

database models:
    Users
    Posts
    Communities


backend options (only api)
    django+djangorestframework
    fastapi
    flask


database options:
    development: sqlite
    production: postgresql
    ORM: sqlalchemy (sqlmodel cannot be used since fastapi-users uses sqlalchemy)

production:
    docker
    nginx
    uvicorn




1. setting up OK
    adding env
    > pip install python-dotenv
    - add .env file (inside it secret and database url)
    adding database (no alembic yet)
    (for db file, it is important where the current working dir is when running the application)
    (navigate inside backend and then run > python runserver.py)
    

2. adding fastapi-users OK
    > pip install fastapi-users[sqlalchemy]
    - update requirements.txt > pip freeze > requirements.txt


3. setting up alembic
    > pip install alembic
    > update alembic/env.py (import Base and all other models, set target_metadata to Base.metadata)
    if using aiosqlite, sqlalchemy url needs to be hardcoded into alembic.ini file,
    but if using only sqlite or postgresql, the more dynamic version can be added as follows:
    from src.config import DATABASE_URL
    config.set_main_option('sqlalchemy.url', DATABASE_URL)
    (add them right below target_metadata = Base.metadata) in env.py
    > alembic revision --autogenerate -m "Initial migration"
    - edit the migration file
    > alembic upgrade head
    